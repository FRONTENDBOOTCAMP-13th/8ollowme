import AOS from 'aos';
import 'aos/dist/aos.css';

import gsap from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';

// AOS Ï¥àÍ∏∞Ìôî
AOS.init({
  duration: 1000,
  once: true,
});

// GSAP ScrollTrigger Îì±Î°ù
gsap.registerPlugin(ScrollTrigger);

// ÏïÑÏΩîÎîîÏñ∏ Í∏∞Îä•
document.querySelectorAll('.accordion-header').forEach((header) => {
  header.addEventListener('click', () => {
    const item = header.parentElement;
    const isActive = item.classList.contains('active');

    // Îã§Î•∏ Î™®Îì† ÏïÑÏΩîÎîîÏñ∏ ÏïÑÏù¥ÌÖú Îã´Í∏∞
    document.querySelectorAll('.accordion-item').forEach((accItem) => {
      accItem.classList.remove('active');
      const content = accItem.querySelector('.accordion-content');
      content.style.maxHeight = null;
    });

    // ÌÅ¥Î¶≠Îêú ÏïÑÏù¥ÌÖú ÌÜ†Í∏Ä
    if (!isActive) {
      item.classList.add('active');
      const content = item.querySelector('.accordion-content');
      content.style.maxHeight = content.scrollHeight + 'px';
    }
  });
});

// Î™©ÏóÖ Ïï†ÎãàÎ©îÏù¥ÏÖò
gsap.utils.toArray('.mockup-left').forEach((mockup) => {
  gsap.from(mockup, {
    x: -100,
    opacity: 0,
    duration: 1,
    scrollTrigger: {
      trigger: mockup,
      start: 'top 80%',
      end: 'top 30%',
      scrub: 1,
      toggleActions: 'play none none reverse',
    },
  });
});

gsap.utils.toArray('.mockup-right').forEach((mockup) => {
  gsap.from(mockup, {
    x: 100,
    opacity: 0,
    duration: 1,
    scrollTrigger: {
      trigger: mockup,
      start: 'top 80%',
      end: 'top 30%',
      scrub: 1,
      toggleActions: 'play none none reverse',
    },
  });
});

// ÌÖçÏä§Ìä∏ ÌéòÏù¥ÎìúÏù∏ Ïï†ÎãàÎ©îÏù¥ÏÖò
gsap.utils.toArray('.feature-text').forEach((text) => {
  gsap.from(text, {
    y: 50,
    opacity: 0,
    duration: 1,
    scrollTrigger: {
      trigger: text,
      start: 'top 80%',
      end: 'top 50%',
      scrub: 1,
      toggleActions: 'play none none reverse',
    },
  });
});

// Î∂ÄÎìúÎü¨Ïö¥ Ïä§ÌÅ¨Î°§
document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
  anchor.addEventListener('click', function (e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute('href'));
    if (target) {
      target.scrollIntoView({
        behavior: 'smooth',
      });
    }
  });
});

// GSAP Ïï†ÎãàÎ©îÏù¥ÏÖò
gsap.registerPlugin(ScrollTrigger);

// Ï¥àÍ∏∞ ÏÉÅÌÉú ÏÑ§Ï†ï
gsap.set('.mangom-container', { opacity: 0, y: -50 });
gsap.set('.title-follow', { opacity: 0, y: -30 });

// Ï¥àÍ∏∞ Îì±Ïû• Ïï†ÎãàÎ©îÏù¥ÏÖò
gsap.to('.mangom-container', {
  opacity: 1,
  y: 0,
  duration: 1,
  ease: 'power2.out',
});

gsap.to('.title-follow', {
  opacity: 1,
  y: 0,
  duration: 1,
  delay: 0.3,
  ease: 'power2.out',
});

// Ïä§ÌÅ¨Î°§ Í∏∞Î∞ò ÎßùÍ≥∞Ïù¥ ÌïòÍ∞ï Ïï†ÎãàÎ©îÏù¥ÏÖò
gsap.to('.mangom-container', {
  y: 70,
  ease: 'none',
  scrollTrigger: {
    trigger: 'body',
    start: 'top top',
    end: 'bottom bottom',
    scrub: 1,
    markers: false,
  },
});

// // ÎßùÍ≥∞Ïù¥ ÌÜµÌÜµ ÌäÄÎäî Ìö®Í≥º
// gsap.to('.mangom-container', {
//   y: '+=10',
//   duration: 0.5,
//   yoyo: true,
//   repeat: -1,
//   ease: 'power1.inOut',
// });

// ÎßêÌíçÏÑ† ÏÇ¥Ïßù ÌùîÎì§Î¶¨Îäî Ìö®Í≥º
gsap.to('.speech-bubble', {
  rotation: 5,
  duration: 1,
  yoyo: true,
  repeat: -1,
  ease: 'none',
});

// Ïä§ÌÅ¨Î°§ ÏúÑÏπòÏóê Îî∞Îùº ÎßùÍ≥∞Ïù¥ ÎßêÌíçÏÑ† ÌÖçÏä§Ìä∏ Î≥ÄÍ≤Ω
gsap.registerPlugin(ScrollTrigger);
let shown = false;
ScrollTrigger.create({
  trigger: 'body',
  start: 'top top',
  end: 'bottom bottom',
  onUpdate: (self) => {
    const progress = self.progress;
    const speechBubble = document.querySelector('.speech-bubble');
    const link = document.getElementById('re8laceLink');

    if (progress < 0.3) {
      speechBubble.textContent = 'ÎÇòÎ•º Îî∞ÎùºÏôÄ!üíõ';
      shown = false;
      gsap.to(link, { opacity: 0, duration: 0.3, ease: 'power2.in' });
    } else if (progress < 0.6) {
      speechBubble.textContent = 'Ïûò Îî∞ÎùºÏò§Í≥† ÏûàÏßÄ?';
      shown = false;
      gsap.to(link, { opacity: 0, duration: 0.3, ease: 'power2.in' });
    } else if (progress < 0.9) {
      speechBubble.textContent = 'Í±∞Ïùò Îã§ ÏôîÏñ¥!';
      shown = false;
      gsap.to(link, { opacity: 0, duration: 0.3, ease: 'power2.in' });
    } else {
      speechBubble.textContent = 'Ïù¥Ï†ú Îñ†ÎÇòÎ≥ºÍπå?‚ú®';

      if (!shown) {
        shown = true;
        gsap.to(link, {
          opacity: 1,
          duration: 1,
          ease: 'power2.out',
        });
      }
    }
  },
});

gsap.to('.hero', {
  scale: 0.5,
  y: window.innerHeight * 0.25,
  borderRadius: '20px', // Ï†êÏ†ê Îë•Í∏ÄÏñ¥Ïßê
  ease: 'power1.out',
  scrollTrigger: {
    trigger: '.video-section',
    scrub: 1,
    start: 'top top',
    end: 'bottom',
  },
});
// ÌîÑÎ°úÏ†ùÌä∏ ÏÜåÍ∞ú Ïù¥ÎØ∏ÏßÄ Î™®Îã¨
document.addEventListener('DOMContentLoaded', () => {
  const modal = document.getElementById('imageModal');
  const modalImage = document.getElementById('modalImage');

  window.openImageModal = function (src) {
    modalImage.src = src;
    modal.classList.remove('hidden');
  };

  window.closeImageModal = function () {
    modal.classList.add('hidden');
  };
});

// ÌÉÄÏûÑÎùºÏù∏ ÌÜ†Í∏Ä Ïä§ÌÅ¨Î¶ΩÌä∏
document.querySelectorAll('.timeline-toggle').forEach((button) => {
  button.addEventListener('click', () => {
    const step = button.getAttribute('data-toggle');
    const content = document.getElementById(`content-${step}`);
    const icon = document.getElementById(`icon-${step}`);

    const isOpen = !content.classList.contains('hidden');

    // Î™®Îëê Îã´Í∏∞
    document.querySelectorAll("[id^='content-']").forEach((el) => el.classList.add('hidden'));
    document.querySelectorAll("[id^='icon-']").forEach((el) => el.classList.remove('rotate-180'));

    // ÌÅ¥Î¶≠Ìïú Í≤ÉÎßå Ïó¥Í∏∞
    if (!isOpen) {
      content.classList.remove('hidden');
      icon.classList.add('rotate-180');
    }
  });
});
